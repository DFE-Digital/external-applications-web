@using DfE.ExternalApplications.Web.Utilities
@using GovUk.Frontend.AspNetCore.TagHelpers
@using Microsoft.AspNetCore.Html;
@model DfE.ExternalApplications.Web.Services.FieldViewModel
@{
    var isRequired = Model.Field.Required ?? true;
    var validationAttributes = new HtmlString(Model.ValidationAttributes);
    var options = Model.Field.Options ?? new List<DfE.ExternalApplications.Domain.Models.Option>();
    var legendValue = Model.Field.Label.IsVisible ? Model.Field.Label.Value : "";
}

<govuk-radios id="@Model.Id" name="Data[@Model.Field.FieldId]" data-field-id="@Model.Field.FieldId">
    <govuk-radios-fieldset>
        <govuk-radios-fieldset-legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
            <span class="govuk-fieldset__heading">@legendValue</span>
        </govuk-radios-fieldset-legend>

        @{
            var (hintHtml, hintClass) = MarkdownSafe.RenderHintWithClass(Model.Field.Tooltip);
        }
        <govuk-radios-hint class="@hintClass">
            @Html.Raw(hintHtml)
        </govuk-radios-hint>

        @if (Model.ErrorMessage != String.Empty)
        {
            <govuk-radios-error-message ignore-modelstate-errors>
                <span class="govuk-visually-hidden">Error: </span>
                @Model.ErrorMessage
            </govuk-radios-error-message>
        }

        @foreach (var opt in options)
        {
            <govuk-radios-item checked="@Model.CurrentValue == opt.Value" value="@opt.Value">@opt.Label</govuk-radios-item>
        }
    </govuk-radios-fieldset>
</govuk-radios>