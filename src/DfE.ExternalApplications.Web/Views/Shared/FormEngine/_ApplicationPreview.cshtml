@model DfE.ExternalApplications.Web.Pages.FormEngine.RenderFormModel

<govuk-back-link href="/applications/@Model.ReferenceNumber">Back to application task list</govuk-back-link>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">Your application</h1>
        <govuk-inset-text>Application reference: <strong>@Model.ReferenceNumber</strong></govuk-inset-text>

        @if (!ViewData.ModelState.IsValid)
        {
            <govuk-error-summary>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <govuk-error-summary-item>@error.ErrorMessage</govuk-error-summary-item>
                }
            </govuk-error-summary>
        }

        <p class="govuk-body">Check your answers before submitting your application.</p>

        @foreach (var group in Model.Template.TaskGroups.OrderBy(g => g.GroupOrder))
        {
            @foreach (var task in group.Tasks.OrderBy(t => t.TaskOrder))
            {
                var taskNameHyphenated = task.TaskName.Replace(" ", "-").ToLower();

                <div class="govuk-summary-card govuk-!-margin-bottom-6" id="task-@taskNameHyphenated-summary">
                    <div class="govuk-summary-card__title-wrapper">
                        <h2 class="govuk-summary-card__title">@task.TaskName</h2>
                        @if (Model.IsApplicationEditable())
                        {
                            <ul class="govuk-summary-card__actions">
                                <li class="govuk-summary-card__action">
                                    <a class="govuk-link" href="/applications/@Model.ReferenceNumber/@task.TaskId" id="task-@taskNameHyphenated-change-link">
                                        Change<span class="govuk-visually-hidden"> @task.TaskName</span>
                                    </a>
                                </li>
                            </ul>
                        }
                    </div>
                    <div class="govuk-summary-card__content">
                        <dl class="govuk-summary-list">
                            @foreach (var page in (task.Pages ?? new List<DfE.ExternalApplications.Domain.Models.Page>()).OrderBy(p => p.PageOrder))
                            {
                                @foreach (var field in page.Fields.OrderBy(f => f.Order))
                                {
                                    var fieldValue = Model.GetFieldValue(field.FieldId);
                                    var hasValue = Model.HasFieldValue(field.FieldId);
                            
                                    if ((field.Type == "autocomplete" || field.Type == "complexField") && hasValue)
                                    {
                                        // Handle multiple autocomplete/complex field values as main header + individual rows
                                        var formattedValues = Model.GetFormattedFieldValues(field.FieldId);
                                        var itemLabel = Model.GetFieldItemLabel(field.FieldId);
                                        var allowMultiple = Model.IsFieldAllowMultiple(field.FieldId);
                                
                                        // Show main field header
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">
                                                @field.Label.Value
                                            </dt>
                                            <dd class="govuk-summary-list__value">
                                                @if (formattedValues.Count == 0)
                                                {
                                                    <span class="govuk-hint">Not answered</span>
                                                }
                                                else if (!allowMultiple)
                                                {
                                                    @Html.Raw(formattedValues.FirstOrDefault())
                                                }
                                            </dd>
                                        </div>

                                        // Show individual items if multiple selection is enabled
                                        @if (allowMultiple && formattedValues.Count > 0)
                                        {
                                            @foreach (var (value, index) in formattedValues.Select((v, i) => (v, i)))
                                            {
                                                <div class="govuk-summary-list__row">
                                                    <dt class="govuk-summary-list__key">
                                                        @itemLabel @(index + 1)
                                                    </dt>
                                                    <dd class="govuk-summary-list__value">
                                                        @Html.Raw(value)
                                                    </dd>
                                                </div>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">
                                                @field.Label.Value
                                            </dt>
                                            <dd class="govuk-summary-list__value">
                                                @if (hasValue)
                                                {
                                                    @if (field.Type == "radios" && field.Options != null)
                                                    {
                                                        var selectedOption = field.Options.FirstOrDefault(o => o.Value == fieldValue);
                                                        @(selectedOption?.Label ?? fieldValue)
                                                    }
                                                    else if (field.Type == "select" && field.Options != null)
                                                    {
                                                        var selectedOption = field.Options.FirstOrDefault(o => o.Value == fieldValue);
                                                        @(selectedOption?.Label ?? fieldValue)
                                                    }
                                                    else
                                                    {
                                                        @Html.Raw(fieldValue.Replace("\r\n", "<br/>").Replace("\r", "<br/>").Replace("\n", "<br/>"))
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="govuk-hint">Not answered</span>
                                                }
                                            </dd>
                                        </div>
                                    }
                                }
                            }
                        </dl>
                    </div>
                </div>
            }
        }
    </div>
</div>

@if (Model.IsApplicationEditable())
{
    <div class="govuk-!-margin-top-6">
        <form method="post" asp-page-handler="SubmitApplication">
            <input type="hidden" asp-for="ReferenceNumber" />
            <govuk-button type="submit" id="submit-application-button">
                Submit application
            </govuk-button>
        </form>
    </div>
}
