@model RenderFormModel
@{
    var task = Model.CurrentTask;
    var summary = task?.Summary;
    var flowId = summary?.FlowRef ?? string.Empty;
    var fieldId = summary?.FieldId ?? string.Empty;
    var addLabel = summary?.AddButtonLabel ?? "Add item";

    // Read collection from accumulated form data. We store as JSON string under fieldId
    Model.FormData.TryGetValue(fieldId, out var raw);
    var json = raw?.ToString() ?? "[]";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">@task?.TaskName</h1>

        <div class="govuk-!-margin-bottom-4">
            <a class="govuk-button" href="/applications/@Model.ReferenceNumber/@Model.TaskId/flow/@flowId/@Guid.NewGuid()">@addLabel</a>
        </div>

        @{
            List<Dictionary<string, object>> items = new();
            try { items = System.Text.Json.JsonSerializer.Deserialize<List<Dictionary<string, object>>>(json) ?? new(); } catch { }
            var flow = Model.Template.Flows?.FirstOrDefault(f => f.FlowId == flowId);
            var itemLabel = flow?.ItemTitleBinding ?? "Member";
        }

        @if (items.Any())
        {
            @foreach (var (item, index) in items.Select((item, i) => (item, i)))
            {
                var memberNumber = index + 1;
                var memberTitle = $"{itemLabel} {memberNumber}";
                
                <div class="govuk-summary-card govuk-!-margin-bottom-6">
                    <div class="govuk-summary-card__title-wrapper">
                        <h2 class="govuk-summary-card__title">@memberTitle</h2>
                        <ul class="govuk-summary-card__actions">
                            <li class="govuk-summary-card__action">
                                <form method="post" style="display: inline;" asp-page="/FormEngine/RenderForm" asp-page-handler="RemoveCollectionItem">
                                    <input type="hidden" name="referenceNumber" value="@Model.ReferenceNumber" />
                                    <input type="hidden" name="taskId" value="@Model.TaskId" />
                                    <input type="hidden" name="fieldId" value="@fieldId" />
                                    <input type="hidden" name="itemId" value="@(item.TryGetValue("id", out var itemIdValue) ? itemIdValue?.ToString() : "")" />
                                    <button type="submit" class="govuk-link" style="border: none; background: none; padding: 0; text-decoration: underline; cursor: pointer;">
                                        Remove<span class="govuk-visually-hidden"> @memberTitle</span>
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </div>
                    <div class="govuk-summary-card__content">
                        <dl class="govuk-summary-list">
                            @foreach (var col in (flow?.SummaryColumns ?? new List<DfE.ExternalApplications.Domain.Models.FlowSummaryColumn>()))
                            {
                                var value = item.TryGetValue(col.Field, out var v) ? v?.ToString() : string.Empty;
                                // Find which page contains this field
                                var targetPage = flow?.Pages?.FirstOrDefault(p => p.Fields.Any(f => f.FieldId == col.Field));
                                var pageId = targetPage?.PageId ?? flow?.Pages?.FirstOrDefault()?.PageId ?? "";
                                
                                <div class="govuk-summary-list__row">
                                    <dt class="govuk-summary-list__key">
                                        @col.Label
                                    </dt>
                                    <dd class="govuk-summary-list__value">
                                        @if (!string.IsNullOrEmpty(value))
                                        {
                                            @value
                                        }
                                        else
                                        {
                                            <span class="govuk-hint">Not answered</span>
                                        }
                                    </dd>
                                    <dd class="govuk-summary-list__actions">
                                        <a class="govuk-link" href="/applications/@Model.ReferenceNumber/@Model.TaskId/flow/@flowId/@(item.TryGetValue("id", out var changeItemIdValue) ? changeItemIdValue?.ToString() : "")/@pageId">
                                            Change<span class="govuk-visually-hidden"> @col.Label for @memberTitle</span>
                                        </a>
                                    </dd>
                                </div>
                            }
                        </dl>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="govuk-inset-text">
                No members have been added.
            </div>        }

        <div class="govuk-button-group">
            <a class="govuk-link" href="/applications/@Model.ReferenceNumber">Back to application task list</a>
        </div>
    </div>
</div>


