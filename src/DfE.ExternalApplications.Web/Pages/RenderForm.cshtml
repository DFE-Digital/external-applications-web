@page "/render-form/{referenceNumber}/{pageId?}"
@model RenderFormModel
@inject DfE.ExternalApplications.Web.Services.IFieldRendererService FieldRenderer
@{
    ViewData["Title"] = "New application";
    var allTasksCompleted = Model.AreAllTasksCompleted();
}

@if (!String.IsNullOrEmpty(Model.CurrentPageId))
{
    <form method="post" asp-page-handler="Page">
        <input type="hidden" asp-for="CurrentPageId"/>
        <govuk-back-link href="/render-form/@Model.ReferenceNumber">Back</govuk-back-link>
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">@Model.CurrentTask.TaskName</h1>

        <govuk-error-summary>
            @{
                var ModelStateWithFieldProps = from m in ModelState
                    join f in Model.CurrentPage.Fields on m.Key.ToString() equals f.FieldId
                    select new { m, f };
            }
            @foreach (var s in ModelStateWithFieldProps.OrderBy(s => s.f.Order))
            {
                foreach (var e in s.m.Value.Errors)
                {
                    var href = $"#Data_{s.m.Key.ToString()}";
                    <govuk-error-summary-item href="@href">
                        @e.ErrorMessage
                    </govuk-error-summary-item>
                }
            }
        </govuk-error-summary>

        @foreach (var field in Model.CurrentPage.Fields.OrderBy(f => f.Order))
        {
            var currentValue = Model.Data.TryGetValue(field.FieldId, out var val) ? val.ToString() : String.Empty;

            var fieldModelState = ModelState.Where(f => f.Key == field.FieldId).FirstOrDefault();
            var errorMessage = fieldModelState.Value?.Errors?.FirstOrDefault()?.ErrorMessage ?? String.Empty;

            @await FieldRenderer.RenderFieldAsync(field, "Data", currentValue, errorMessage);
        }

        <govuk-button type="submit" name="handler" value="Page">Save and continue</govuk-button>
    </form>
}
else
{
    <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">Your application</h1>
    <govuk-inset-text>Application reference: <strong>@Model.ReferenceNumber</strong></govuk-inset-text>
    @foreach (var group in Model.Template.TaskGroups.OrderBy(g => g.GroupOrder))
    {
        <h1 class="govuk-heading-m">
            @group.GroupName
        </h1>
        <ul class="govuk-task-list">
            @foreach (var task in group.Tasks.OrderBy(t => t.TaskOrder))
            {
                var currentTaskStatus = Model.GetTaskStatusFromSession(task.TaskId);
                var statusClass = Model.GetTaskStatusDisplayClass(currentTaskStatus);
                var statusText = Model.GetTaskStatusDisplayText(currentTaskStatus);

                                    <li class="govuk-task-list__item govuk-task-list__item--with-link">
                        <div class="govuk-task-list__name-and-hint">
                            @if (Model.IsApplicationEditable())
                            {
                                <a class="govuk-link govuk-task-list__link" href="/render-form/@Model.ReferenceNumber/@task.TaskId/summary" aria-describedby="task-@task.TaskName-status">
                                    @task.TaskName
                                </a>
                            }
                            else
                            {
                                <span class="govuk-task-list__link">@task.TaskName</span>
                            }
                        </div>
                        <div class="govuk-task-list__status" id="task-@task.TaskId-status">
                            <govuk-tag class="@statusClass">@statusText</govuk-tag>
                        </div>
                    </li>
            }
        </ul>
    }
    <div class="govuk-!-margin-top-6">
        @if (Model.IsApplicationEditable())
        {
            @if (allTasksCompleted)
            {
                <a href="/render-form/@Model.ReferenceNumber/preview" class="govuk-button" role="button">
                    Preview application
                </a>
            }
            else
            {
                <button class="govuk-button govuk-button--disabled" disabled>
                    Preview application
                </button>
                <p class="govuk-body govuk-hint govuk-!-margin-top-2">
                    Complete all sections to preview your application
                </p>
            }
        }
        else
        {
            <a href="/render-form/@Model.ReferenceNumber/preview" class="govuk-button" role="button">
                View application
            </a>
            <div class="govuk-inset-text govuk-!-margin-top-4">
                <p>This application has been submitted and can no longer be changed.</p>
                <p>Status: <strong>@Model.ApplicationStatus</strong></p>
            </div>
        }
    </div>
}