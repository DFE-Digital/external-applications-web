@page "/Confirmation"
@model DfE.ExternalApplications.Web.Pages.Confirmation.IndexModel
@using System.Linq
@{
    ViewData["Title"] = Model.DisplayModel.Title;

    var hasTaskName = Model.DisplayModel.OriginalFormData.ContainsKey("CurrentTask.TaskName");
    var taskName = hasTaskName ? Model.DisplayModel.OriginalFormData["CurrentTask.TaskName"] as string : null;
}

@section BeforeContent {
    <govuk-back-link href="@Model.DisplayModel.ReturnUrl">Back</govuk-back-link>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h1 class="govuk-fieldset__heading">
                @if (hasTaskName)
                {
                    <span class="govuk-caption-l">@taskName</span>
                }
                @Model.DisplayModel.Title
            </h1>
        </legend>
        
        @if (Model.DisplayModel.DisplayData.Any())
        {
            var first = Model.DisplayModel.DisplayData.First();
            var rest = Model.DisplayModel.DisplayData.Skip(1);
            <div class="govuk-inset-text">
                <h2 class="govuk-heading-m">@first.Value</h2>
                @foreach (var item in rest)
                {
                    var lbl = item.Key ?? string.Empty;
                    var isAcronym = !string.IsNullOrWhiteSpace(lbl) && lbl.Length <= 6 && lbl.ToUpperInvariant() == lbl;
                    lbl = isAcronym ? lbl : (string.IsNullOrEmpty(lbl) ? string.Empty : char.ToUpperInvariant(lbl[0]) + (lbl.Length > 1 ? lbl.Substring(1).ToLowerInvariant() : string.Empty));
                    <p class="govuk-body"><span class="govuk-!-font-weight-bold">@lbl:</span> @item.Value</p>
                }
            </div>
        }
        
        <form method="post" id="confirmation-form">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="ConfirmationToken" />
            @* Repost original form fields when confirming *@
            @foreach (var kvp in Model.DisplayModel.OriginalFormData)
            {
                if (kvp.Value is string)
                {
                    <input type="hidden" name="@kvp.Key" value="@kvp.Value" />
                }
                else if (kvp.Value is string[] arr)
                {
                    foreach (var v in arr)
                    {
                        <input type="hidden" name="@kvp.Key" value="@v" />
                    }
                }
            }
            
            <div class="govuk-form-group @(ViewData.ModelState.ContainsKey("Confirmed") ? "govuk-form-group--error" : string.Empty)">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-visually-hidden">Choose Yes or No</legend>
                    @if (ViewData.ModelState.ContainsKey("Confirmed"))
                    {
                        <govuk-error-message> @ViewData.ModelState["Confirmed"].Errors.FirstOrDefault()?.ErrorMessage </govuk-error-message>
                    }
                    <div class="govuk-radios" data-module="govuk-radios">
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="confirmed-yes" name="Confirmed" type="radio" value="true">
                            <label class="govuk-label govuk-radios__label" for="confirmed-yes">
                                Yes
                            </label>
                        </div>
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="confirmed-no" name="Confirmed" type="radio" value="false">
                            <label class="govuk-label govuk-radios__label" for="confirmed-no">
                                No
                            </label>
                        </div>
                    </div>
                </fieldset>
            </div>
            
            <div class="govuk-button-group">
                <button class="govuk-button" type="submit" id="confirmation-continue">Continue</button>
            </div>
        </form>
        <script>
            (function(){
                const form = document.getElementById('confirmation-form');
                const no = document.getElementById('confirmed-no');
                form?.addEventListener('submit', function(e){
                    if (no?.checked){
                        e.preventDefault();
                        window.location.href = '@Model.DisplayModel.ReturnUrl';
                    }
                });
            })();
        </script>
    </div>
</div>
