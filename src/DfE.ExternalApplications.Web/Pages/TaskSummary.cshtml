@page "/render-form/{referenceNumber}/{taskId}/summary"
@model TaskSummaryModel
@{
    ViewData["Title"] = Model.CurrentTask?.TaskName ?? "Task Summary";
}

<govuk-back-link href="/render-form/@Model.ReferenceNumber">Back to application task list</govuk-back-link>

<h1 class="govuk-heading-xl govuk-!-margin-bottom-6">@Model.CurrentTask.TaskName</h1>

<dl class="govuk-summary-list">
    @foreach (var page in Model.CurrentTask.Pages.OrderBy(p => p.PageOrder))
    {
        @foreach (var field in page.Fields.OrderBy(f => f.Order))
        {
            var fieldValue = Model.GetFieldValue(field.FieldId);
            var hasValue = Model.HasFieldValue(field.FieldId);
            var changeUrl = $"/render-form/{Model.ReferenceNumber}/{page.PageId}";
            
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @field.Label.Value
                </dt>
                <dd class="govuk-summary-list__value">
                    @if (hasValue)
                    {
                        @if (field.Type == "radios" && field.Options != null)
                        {
                            var selectedOption = field.Options.FirstOrDefault(o => o.Value == fieldValue);
                            @(selectedOption?.Label ?? fieldValue)
                        }
                        else if (field.Type == "select" && field.Options != null)
                        {
                            var selectedOption = field.Options.FirstOrDefault(o => o.Value == fieldValue);
                            @(selectedOption?.Label ?? fieldValue)
                        }
                        else if (field.Type == "autocomplete")
                        {
                            @Model.GetFormattedFieldValue(field.FieldId)
                        }
                        else
                        {
                            @fieldValue
                        }
                    }
                    else
                    {
                        <span class="govuk-hint">Not answered</span>
                    }
                </dd>
                <dd class="govuk-summary-list__actions">
                    @if (Model.IsApplicationEditable())
                    {
                        <a class="govuk-link" href="@changeUrl">
                            Change<span class="govuk-visually-hidden"> @field.Label.Value</span>
                        </a>
                    }
                </dd>
            </div>
        }
    }
</dl>

@if (Model.IsApplicationEditable())
{
    <form method="post">
        <input type="hidden" asp-for="TaskId" />
        <input type="hidden" asp-for="ReferenceNumber" />
        
        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
            <div class="govuk-checkboxes__item">
                <input class="govuk-checkboxes__input" id="IsTaskCompleted" name="IsTaskCompleted" type="checkbox" value="true" @(Model.IsTaskCompleted ? "checked" : "")>
                <label class="govuk-label govuk-checkboxes__label" for="IsTaskCompleted">
                    Mark this section as complete, you can still make changes later
                </label>
            </div>
        </div>

        <div class="govuk-button-group govuk-!-margin-top-6">
            <govuk-button type="submit">Save and continue</govuk-button>
            <a class="govuk-link" href="/render-form/@Model.ReferenceNumber">Return to application overview</a>
        </div>
    </form>
}
else
{
    <div class="govuk-inset-text govuk-!-margin-top-6">
        <p>This application has been submitted and can no longer be changed.</p>
        <p>Status: <strong>@Model.ApplicationStatus</strong></p>
    </div>
    
    <div class="govuk-!-margin-top-6">
        <a class="govuk-link" href="/render-form/@Model.ReferenceNumber">Return to application overview</a>
    </div>
} 